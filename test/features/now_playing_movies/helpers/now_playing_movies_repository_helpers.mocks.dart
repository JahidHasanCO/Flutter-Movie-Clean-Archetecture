// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_demo_app/test/features/now_playing_movies/helpers/now_playing_movies_repository_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_demo_app/core/resources/data_state.dart' as _i2;
import 'package:flutter_demo_app/features/common/domain/entities/movies_entity.dart'
    as _i5;
import 'package:flutter_demo_app/features/now_playing_movies/domain/repository/now_playing_movies_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDataState_0<T> extends _i1.SmartFake implements _i2.DataState<T> {
  _FakeDataState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NowPlayingMoviesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNowPlayingMoviesRepository extends _i1.Mock
    implements _i3.NowPlayingMoviesRepository {
  MockNowPlayingMoviesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.DataState<List<_i5.MoviesEntity>>> getNowPlayingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue: _i4.Future<_i2.DataState<List<_i5.MoviesEntity>>>.value(
            _FakeDataState_0<List<_i5.MoviesEntity>>(
          this,
          Invocation.method(
            #getNowPlayingMovies,
            [],
          ),
        )),
      ) as _i4.Future<_i2.DataState<List<_i5.MoviesEntity>>>);

  @override
  _i4.Future<List<_i5.MoviesEntity>> getLocalNowPlayingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocalNowPlayingMovies,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.MoviesEntity>>.value(<_i5.MoviesEntity>[]),
      ) as _i4.Future<List<_i5.MoviesEntity>>);

  @override
  _i4.Future<void> cacheNowPlayingMovies(List<_i5.MoviesEntity>? movies) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheNowPlayingMovies,
          [movies],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteNowPlayingMovies(_i5.MoviesEntity? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNowPlayingMovies,
          [movie],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> deleteAllCachedNowPlayingMovies() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllCachedNowPlayingMovies,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
